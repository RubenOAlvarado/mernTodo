{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:4000';\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl + '/todos');\n    return todos;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const addTodo = async formData => {\n  try {\n    const todo = {\n      name: formData.name,\n      description: formData.description,\n      status: false\n    };\n    const saveTodo = await axios.post(baseUrl + '/add-todo', todo);\n    return saveTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const updateTodo = async todo => {\n  try {\n    const todoUpdate = {\n      status: true\n    };\n    const updatedTodo = await axios.put(`${baseUrl}/edit-todo/${todo._id}`, todoUpdate);\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteTodo = async _id => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/delete-todo/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["/home/munditoro/Documentos/Proyectos personales/Node/merntodo/front/src/API.ts"],"names":["axios","baseUrl","getTodos","todos","get","error","Error","addTodo","formData","todo","name","description","status","saveTodo","post","updateTodo","todoUpdate","updatedTodo","put","_id","deleteTodo","deletedTodo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAgD;AACpE,MAAI;AACA,UAAMC,KAAgC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAUH,OAAO,GAAC,QAAlB,CAA/C;AAEA,WAAOE,KAAP;AACH,GAJD,CAIE,OAAOE,KAAP,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CARM;AAUP,OAAO,MAAME,OAAO,GAAG,MAAOC,QAAP,IAA+D;AAClF,MAAI;AACA,UAAMC,IAAwB,GAAG;AAC7BC,MAAAA,IAAI,EAAEF,QAAQ,CAACE,IADc;AAE7BC,MAAAA,WAAW,EAAEH,QAAQ,CAACG,WAFO;AAG7BC,MAAAA,MAAM,EAAE;AAHqB,KAAjC;AAMA,UAAMC,QAAoC,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAWb,OAAO,GAAC,WAAnB,EAAgCQ,IAAhC,CAAnD;AAEA,WAAOI,QAAP;AACH,GAVD,CAUE,OAAOR,KAAP,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAdM;AAgBP,OAAO,MAAMU,UAAU,GAAE,MAAON,IAAP,IAA2D;AAChF,MAAG;AACC,UAAMO,UAAiC,GAAG;AACtCJ,MAAAA,MAAM,EAAE;AAD8B,KAA1C;AAIA,UAAMK,WAAuC,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACjD,GAAEjB,OAAQ,cAAaQ,IAAI,CAACU,GAAI,EADiB,EAElDH,UAFkD,CAAtD;AAKA,WAAOC,WAAP;AACH,GAXD,CAWC,OAAOZ,KAAP,EAAc;AACX,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAfM;AAiBP,OAAO,MAAMe,UAAU,GAAG,MAAQD,GAAR,IAA4D;AAClF,MAAG;AACC,UAAME,WAAuC,GAAG,MAAMrB,KAAK,CAACsB,MAAN,CAAc,GAAErB,OAAQ,gBAAekB,GAAI,EAA3C,CAAtD;AAEA,WAAOE,WAAP;AACH,GAJD,CAIC,OAAOhB,KAAP,EAAc;AACX,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CARM","sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\nconst baseUrl: string = 'http://localhost:4000';\n\nexport const getTodos = async ():Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const todos:AxiosResponse<ApiDataType> = await axios.get(baseUrl+'/todos');\n\n        return todos;\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\nexport const addTodo = async (formData:ITodo): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const todo: Omit<ITodo, '_id'> = {\n            name: formData.name,\n            description: formData.description,\n            status: false,\n        }\n\n        const saveTodo: AxiosResponse<ApiDataType> = await axios.post(baseUrl+'/add-todo', todo);\n\n        return saveTodo;\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\nexport const updateTodo= async (todo: ITodo):Promise<AxiosResponse<ApiDataType>> => {\n    try{\n        const todoUpdate: Pick<ITodo, 'status'> = {\n            status: true\n        }\n\n        const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\n            `${baseUrl}/edit-todo/${todo._id}`,\n            todoUpdate\n        );\n\n        return updatedTodo;\n    }catch (error) {\n        throw new Error(error)\n    }\n}\n\nexport const deleteTodo = async ( _id: string ):Promise<AxiosResponse<ApiDataType>> =>{\n    try{\n        const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(`${baseUrl}/delete-todo/${_id}`);\n\n        return deletedTodo;\n    }catch (error) {\n        throw new Error(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}